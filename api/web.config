<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <location path="." inheritInChildApplications="false">
    <system.webServer>
      <staticContent>
        <!-- Ensure all common MIME types are properly set -->
        <mimeMap fileExtension=".js" mimeType="application/javascript" />
        <mimeMap fileExtension=".css" mimeType="text/css" />
        <mimeMap fileExtension=".json" mimeType="application/json" />
        <mimeMap fileExtension=".png" mimeType="image/png" />
        <mimeMap fileExtension=".jpg" mimeType="image/jpeg" />
        <mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
        <mimeMap fileExtension=".ico" mimeType="image/x-icon" />
      </staticContent>
      
      <handlers>
        <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified" />
      </handlers>

      <aspNetCore processPath="dotnet" arguments=".\api.dll" stdoutLogEnabled="true" stdoutLogFile=".\logs\stdout" hostingModel="inprocess" />
      
      <rewrite>
        <rules>
          <!-- Rule for API requests - prevents them from being rewritten to index.html -->
          <rule name="API Requests" stopProcessing="true">
            <match url="^api/.*" />
            <action type="None" />
          </rule>

          <!-- Rule to serve static files from wwwroot if they exist -->
          <rule name="Static Files" stopProcessing="true">
            <match url="^(wwwroot/.*\.(js|css|png|jpg|jpeg|gif|svg|ico|json))$" />
            <conditions>
              <add input="{REQUEST_FILENAME}" matchType="IsFile" />
            </conditions>
            <action type="Rewrite" url="{R:0}" />
          </rule>

          <!-- Rule to serve manifest.json and other files in wwwroot -->
          <rule name="Service Worker and Manifest" stopProcessing="true">
            <match url="^(wwwroot/(manifest\.json|service-worker\.js|favicon\.ico|logo192\.png))$" />
            <action type="Rewrite" url="{R:0}" />
          </rule>

          <!-- Rewrite all other requests to index.html for client-side routing -->
          <rule name="React Routes" stopProcessing="true">
            <match url=".*" />
            <conditions logicalGrouping="MatchAll">
              <!-- Ensure it's not an API request -->
              <add input="{REQUEST_URI}" pattern="^/api/.*" negate="true" />
              <!-- Ensure it's not a file or directory -->
              <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
              <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
            </conditions>
            <action type="Rewrite" url="/wwwroot/index.html" />
          </rule>
        </rules>
      </rewrite>
    </system.webServer>
  </location>
</configuration>

